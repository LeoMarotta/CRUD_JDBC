/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.tche.ucpel.bd2.view;

import javax.swing.JFrame;

/**
 *
 * @author leomarotta
 */
public class FormAluno extends javax.swing.JInternalFrame {

    private JFrame mdi;
    
    /**
     * Creates new form FormAluno
     */
    public FormAluno(JFrame mdi) {
        this.mdi = mdi;
        initComponents();
        //this.atualizaLista();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
        /*private void atualizaLista() {
        try {
            AlunoDAO funcDAO = new AlunoDAO(MDISistema.getConexao());
            List<Aluno> lista = funcDAO.listaTodos();
            DefaultTableModel dtm = (DefaultTableModel) this.tbAlunos.getModel();
            dtm.setRowCount(0);
            for (Funcionario func : lista) {
                dtm.addRow(new Object[]{func.getCod(), func.getNome(), func.getDtContratacao(), func.getCargo(), func.getGerente(), func.getDepartamento()});
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this.mdi, String.format("Erro ao ler os Departamentos:%s", ex.getMessage()), "Erro", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormDepartamento.class.getName()).log(Level.WARNING, "Erro ao ler os Departamentos", ex);
        }
    }*/
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
